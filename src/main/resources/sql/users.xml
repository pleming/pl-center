<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="users">
    <select id="isExistUser" resultType="org.computerized.pl.dto.UserDTO">
        SELECT
			user_code AS userCode,
			user_id AS userId,
			passwd,
			col_id AS colId,
			dept_id AS deptId,
			student_code AS studentCode,
			users.name,
			email,
			phone
        FROM users
        WHERE user_id = #{userId}
    </select>

    <select id="signin" resultType="org.computerized.pl.dto.UserAuthDTO">
        SELECT
			U.user_code AS userCode,
	     	user_id AS userId,
			passwd,
			col_id AS colId,
			dept_id AS deptId,
			student_code AS studentCode,
			U.name,
			email,
			phone,
			auth
        FROM users AS U
	    INNER JOIN auth AS A
	    ON U.user_code = A.user_code
        WHERE user_id = #{userId}
    </select>

    <insert id="signup">
        INSERT INTO
			users(user_id, passwd, col_id, dept_id, student_code, name, email, phone)
        VALUES
        	(#{userId}, #{passwd}, ${colId}, ${deptId}, #{studentCode}, #{name}, #{email}, #{phone})
    </insert>

	<select id="checkPasswd" resultType="org.computerized.pl.model.users.PasswdChkVO">
		SELECT
			user_code AS userCode,
			passwd
		FROM users
		WHERE user_code = ${userCode}
	</select>

	<select id="loadUserInfo" resultType="org.computerized.pl.model.users.UserVO">
		SELECT
			user_id AS userId,
			col_id AS colId,
			dept_id AS deptId,
			student_code AS studentCode,
			name,
			email,
			phone
		FROM users
		WHERE user_code = ${userCode}
	</select>

	<update id="updateUserInfo">
		UPDATE users
		SET passwd = #{passwd}, col_id = ${colId}, dept_id = ${deptId}, student_code = #{studentCode}, name = #{name}, email = #{email}, phone = #{phone}
		WHERE user_code = ${userCode}
	</update>

	<select id="loadWorker" resultType="org.computerized.pl.model.users.WorkerVO">
		SELECT
			U.user_code AS userCode,
			U.user_id AS userId,
			U.name
		FROM users AS U
		INNER JOIN auth AS A
		ON U.user_code = A.user_code
		WHERE A.auth = ${auth}
	</select>

	<select id="loadStudent" resultType="org.computerized.pl.model.classStd.StudentVO">
		SELECT
			U.user_code AS userCode,
	     	user_id AS userId,
			college,
			dept,
			student_code AS studentCode,
			U.name,
			email,
			phone,
			auth
        FROM users AS U
	    INNER JOIN auth AS A
	    ON U.user_code = A.user_code
	    INNER JOIN college AS C
	    ON U.col_id = C.id
	    INNER JOIN dept AS D
	    ON U.dept_id = D.id
		<if test="searchKey != null and searchKey != ''">
			WHERE U.user_id IS NOT NULL AND (
						U.user_id LIKE #{searchKey}
						OR college LIKE #{searchKey}
						OR dept LIKE #{searchKey}
						OR U.student_code LIKE #{searchKey}
						OR U.name LIKE #{searchKey}
				  )
		</if>
		LIMIT ${startIdx}, ${rowBound}
	</select>

	<select id="getTotalRowCount" resultType="java.lang.Integer">
		SELECT
			count(*)
		FROM users
	</select>

	<select id="getTotalRowCountForSearch" resultType="java.lang.Integer">
		SELECT
			count(*)
		FROM users AS U
		INNER JOIN auth AS A
		ON U.user_code = A.user_code
		INNER JOIN college AS C
		ON U.col_id = C.id
		INNER JOIN dept AS D
		ON U.dept_id = D.id
		<if test="searchKey != null and searchKey != ''">
			WHERE U.user_id IS NOT NULL AND (
					U.user_id LIKE #{searchKey}
					OR college LIKE #{searchKey}
					OR dept LIKE #{searchKey}
					OR U.student_code LIKE #{searchKey}
					OR U.name LIKE #{searchKey}
				  )
		</if>
	</select>

	<select id="loadStudentByCondition" resultType="org.computerized.pl.model.classStd.StdSearchVO">
		SELECT
			U.user_code AS userCode,
			user_id AS userId,
			college,
			dept,
			student_code AS studentCode,
			U.name
			<if test="requireClassInfo == true">
				,cls.id AS classId,
				cls.year,
				cls.semester,
				cls.class_no AS classNo
			</if>
		FROM users AS U
		INNER JOIN auth AS A
		ON U.user_code = A.user_code
		INNER JOIN college AS C
		ON U.col_id = C.id
		INNER JOIN dept AS D
		ON U.dept_id = D.id
		<if test="requireClassInfo == true">
			INNER JOIN class_std AS CS
			ON U.user_code = CS.user_code
			INNER JOIN pl_center.class AS cls
			ON CS.class_id = cls.id
		</if>
		WHERE auth = ${auth} AND (
					U.user_id LIKE #{searchKey}
					OR college LIKE #{searchKey}
					OR dept LIKE #{searchKey}
					OR U.student_code LIKE #{searchKey}
					OR U.name LIKE #{searchKey}
			  )
	</select>
</mapper>